{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Cloud_Files\\\\School\\\\Spring_2020\\\\front_end_prototype\\\\Site\\\\src\\\\InTheaters.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport $ from 'jquery';\n\nclass InTheaters extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      url: 'https://api.themoviedb.org/3/movie/now_playing?api_key=619797393cd52383263f43d35d25f59f&language=en-US&page=1&region=US',\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    $.support.cors = true;\n    return $.ajax({\n      url: this.state.url,\n      method: \"GET\",\n      success: data => {\n        this.setState({\n          movies: data.results\n        });\n      },\n      error: data => {\n        alert(\"Error\");\n      }\n    });\n  }\n\n  handleClick(event) {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, this.state.movies.map(data => {\n      if (data.backdrop_path === null) {\n        let link = /*#__PURE__*/React.createElement(\"img\", {\n          src: \"images/imagenotfound.jpg\",\n          width: \"300\",\n          height: \"200\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }\n        });\n      } else {\n        /*#__PURE__*/\n        React.createElement(\"img\", {\n          src: \"https://image.tmdb.org/t/p/original\" + data.backdrop_path,\n          width: \"300\",\n          height: \"200\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      }, \"if (data.backdrop_path === null) \", /*#__PURE__*/React.createElement(\"img\", {\n        src: \"images/imagenotfound.jpg\",\n        width: \"300\",\n        height: \"200\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 67\n        }\n      }), \"else \", /*#__PURE__*/React.createElement(\"img\", {\n        src: \"https://image.tmdb.org/t/p/original\" + data.backdrop_path,\n        width: \"300\",\n        height: \"200\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 40\n        }\n      })), /*#__PURE__*/React.createElement(\"section\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      }, data.title), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"text\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }\n      }, data.overview))));\n    }));\n  }\n\n}\n\nexport default InTheaters;","map":{"version":3,"sources":["D:/Desktop/Cloud_Files/School/Spring_2020/front_end_prototype/Site/src/InTheaters.js"],"names":["React","Component","connect","$","InTheaters","constructor","props","handleClick","bind","state","url","movies","componentDidMount","support","cors","ajax","method","success","data","setState","results","error","alert","event","render","map","backdrop_path","link","title","overview"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AAEA,SAAKC,KAAL,GAAa;AACLC,MAAAA,GAAG,EAAE,yHADA;AAELC,MAAAA,MAAM,EAAE;AAFH,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBT,IAAAA,CAAC,CAACU,OAAF,CAAUC,IAAV,GAAiB,IAAjB;AAEA,WAAOX,CAAC,CAACY,IAAF,CAAO;AACVL,MAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GADN;AAEVM,MAAAA,MAAM,EAAE,KAFE;AAGVC,MAAAA,OAAO,EAAGC,IAAD,IAAU;AACf,aAAKC,QAAL,CAAc;AACVR,UAAAA,MAAM,EAAEO,IAAI,CAACE;AADH,SAAd;AAGH,OAPS;AAQVC,MAAAA,KAAK,EAAGH,IAAD,IAAU;AACbI,QAAAA,KAAK,CAAC,OAAD,CAAL;AACH;AAVS,KAAP,CAAP;AAYH;;AAEDf,EAAAA,WAAW,CAACgB,KAAD,EAAQ,CAElB;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKf,KAAL,CAAWE,MAAX,CAAkBc,GAAlB,CAAuBP,IAAD,IAAQ;AAC3B,UAAIA,IAAI,CAACQ,aAAL,KAAuB,IAA3B,EAAiC;AAC7B,YAAIC,IAAI,gBACR;AAAK,UAAA,GAAG,EAAC,0BAAT;AAAoC,UAAA,KAAK,EAAC,KAA1C;AAAgD,UAAA,MAAM,EAAC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAEH,OAHD,MAGO;AACH;AAAA;AAAK,UAAA,GAAG,EAAE,wCAAsCT,IAAI,CAACQ,aAArD;AAAoE,UAAA,KAAK,EAAC,KAA1E;AAAgF,UAAA,MAAM,EAAC,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;AACD,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DACsC;AAAK,QAAA,GAAG,EAAC,0BAAT;AAAoC,QAAA,KAAK,EAAC,KAA1C;AAAgD,QAAA,MAAM,EAAC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADtC,wBAEW;AAAK,QAAA,GAAG,EAAE,wCAAsCR,IAAI,CAACQ,aAArD;AAAoE,QAAA,KAAK,EAAC,KAA1E;AAAgF,QAAA,MAAM,EAAC,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFX,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKR,IAAI,CAACU,KAAV,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOV,IAAI,CAACW,QAAZ,CADJ,CAFJ,CALJ,CADJ;AAcH,KArBA,CADL,CADJ;AA0BH;;AA3D8B;;AA6DnC,eAAezB,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport $ from 'jquery';\r\n\r\nclass InTheaters extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClick = this.handleClick.bind(this);\r\n\r\n        this.state = {\r\n                url: 'https://api.themoviedb.org/3/movie/now_playing?api_key=619797393cd52383263f43d35d25f59f&language=en-US&page=1&region=US',\r\n                movies: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        $.support.cors = true;\r\n\r\n        return $.ajax({\r\n            url: this.state.url,\r\n            method: \"GET\",\r\n            success: (data) => {\r\n                this.setState({\r\n                    movies: data.results\r\n                })\r\n            },\r\n            error: (data) => {\r\n                alert(\"Error\");\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClick(event) {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.movies.map((data)=>{\r\n                    if (data.backdrop_path === null) {\r\n                        let link = \r\n                        <img src='images/imagenotfound.jpg' width=\"300\" height=\"200\"></img>\r\n                    } else { \r\n                        <img src={\"https://image.tmdb.org/t/p/original\"+data.backdrop_path} width=\"300\" height=\"200\"></img> \r\n                    }\r\n                    return(\r\n                        <div>\r\n                            <div>\r\n                                if (data.backdrop_path === null) {<img src='images/imagenotfound.jpg' width=\"300\" height=\"200\"></img>}\r\n                                else { <img src={\"https://image.tmdb.org/t/p/original\"+data.backdrop_path} width=\"300\" height=\"200\"></img> }\r\n                            </div>\r\n                            <section>\r\n                                <h1>{data.title}</h1>\r\n                                <div>\r\n                                    <text>{data.overview}</text>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default InTheaters;  "]},"metadata":{},"sourceType":"module"}