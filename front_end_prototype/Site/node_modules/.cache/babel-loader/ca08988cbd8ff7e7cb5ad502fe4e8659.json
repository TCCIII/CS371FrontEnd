{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Cloud_Files\\\\School\\\\Spring_2020\\\\front_end_prototype\\\\Site\\\\src\\\\Lists.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport $ from 'jquery';\nimport NotFound from './images/imagenotfound.jpg';\n\nclass Lists extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      url: 'https://cs371-backend.herokuapp.com/list/',\n      movies: [],\n      lists: []\n    };\n  }\n\n  componentDidMount() {\n    $.support.cors = true;\n    /*      GET /list/ HTTP/1.1\r\n    Host: cs371-backend.herokuapp.com\r\n    Connection: keep-alive\r\n    Cache-Control: max-age=0\r\n    Upgrade-Insecure-Requests: 1\r\n    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36\r\n    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng;q=0.8,application/signed-exchange;v=b3;q=0.9\r\n    Sec-Fetch-Site: none\r\n    Sec-Fetch-Mode: navigate\r\n    Sec-Fetch-User: ?1\r\n    Sec-Fetch-Dest: document\r\n    Accept-Encoding: gzip, deflate, br\r\n    Accept-Language: en-US,en;q=0.9\r\n    */\n\n    $.ajax({\n      type: \"GET\",\n      url: this.state.url,\n      dataType: \"jsonp\",\n      success: data => {\n        this.setState({\n          lists: data\n        });\n        alert('SUccess!');\n      },\n      error: data => {\n        alert(\"Error: \", JSON.stringify(data));\n      }\n    });\n    /*\r\n    fetch(this.state.url).then(res => res.json()).then((result) => {\r\n    this.setState({\r\n      lists: result\r\n    });\r\n    }, (error) => {\r\n    alert(\"Fail!\");\r\n    }\r\n    )\r\n    */\n  }\n\n  handleClick(event) {}\n\n  render() {\n    let link;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, this.state.movies.map(data => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }\n      }, data.title));\n    }));\n  }\n\n}\n\nexport default Lists;","map":{"version":3,"sources":["D:/Desktop/Cloud_Files/School/Spring_2020/front_end_prototype/Site/src/Lists.js"],"names":["React","Component","connect","$","NotFound","Lists","constructor","props","handleClick","bind","state","url","movies","lists","componentDidMount","support","cors","ajax","type","dataType","success","data","setState","alert","error","JSON","stringify","event","render","link","map","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,2CADI;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBX,IAAAA,CAAC,CAACY,OAAF,CAAUC,IAAV,GAAiB,IAAjB;AACA;;;;;;;;;;;;;;;AAcAb,IAAAA,CAAC,CAACc,IAAF,CAAO;AACHC,MAAAA,IAAI,EAAE,KADH;AAEHP,MAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAFb;AAGHQ,MAAAA,QAAQ,EAAE,OAHP;AAIHC,MAAAA,OAAO,EAAGC,IAAD,IAAU;AACf,aAAKC,QAAL,CAAc;AACVT,UAAAA,KAAK,EAAEQ;AADG,SAAd;AAGAE,QAAAA,KAAK,CAAC,UAAD,CAAL;AACH,OATE;AAUHC,MAAAA,KAAK,EAAGH,IAAD,IAAU;AACbE,QAAAA,KAAK,CAAC,SAAD,EAAYE,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAZ,CAAL;AACH;AAZE,KAAP;AAcA;;;;;;;;;;AAUH;;AAEDb,EAAAA,WAAW,CAACmB,KAAD,EAAQ,CAElB;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAJ;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKnB,KAAL,CAAWE,MAAX,CAAkBkB,GAAlB,CAAuBT,IAAD,IAAU;AAC7B,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACU,KAAV,CADJ,CADJ;AAKH,KANA,CADL,CADJ;AAWH;;AAvEyB;;AAyE9B,eAAe1B,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport $ from 'jquery';\r\nimport NotFound from './images/imagenotfound.jpg';\r\n\r\nclass Lists extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClick = this.handleClick.bind(this);\r\n\r\n        this.state = {\r\n            url: 'https://cs371-backend.herokuapp.com/list/',\r\n            movies: [],\r\n            lists: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        $.support.cors = true;\r\n        /*      GET /list/ HTTP/1.1\r\n      Host: cs371-backend.herokuapp.com\r\n      Connection: keep-alive\r\n      Cache-Control: max-age=0\r\n      Upgrade-Insecure-Requests: 1\r\n      User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36\r\n      Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng;q=0.8,application/signed-exchange;v=b3;q=0.9\r\n      Sec-Fetch-Site: none\r\n      Sec-Fetch-Mode: navigate\r\n      Sec-Fetch-User: ?1\r\n      Sec-Fetch-Dest: document\r\n      Accept-Encoding: gzip, deflate, br\r\n      Accept-Language: en-US,en;q=0.9\r\n      */\r\n        $.ajax({\r\n            type: \"GET\",\r\n            url: this.state.url,\r\n            dataType: \"jsonp\",\r\n            success: (data) => {\r\n                this.setState({\r\n                    lists: data\r\n                })\r\n                alert('SUccess!')\r\n            },\r\n            error: (data) => {\r\n                alert(\"Error: \", JSON.stringify(data));\r\n            }\r\n        })\r\n        /*\r\n  fetch(this.state.url).then(res => res.json()).then((result) => {\r\n      this.setState({\r\n          lists: result\r\n      });\r\n  }, (error) => {\r\n      alert(\"Fail!\");\r\n  }\r\n  )\r\n  */\r\n    }\r\n\r\n    handleClick(event) {\r\n\r\n    }\r\n\r\n    render() {\r\n        let link;\r\n        return (\r\n            <div>\r\n                {this.state.movies.map((data) => {\r\n                    return (\r\n                        <div>\r\n                            <h1>{data.title}</h1>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Lists;  "]},"metadata":{},"sourceType":"module"}