{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Cloud_Files\\\\School\\\\Spring_2020\\\\front_end_prototype\\\\Site\\\\src\\\\Main\\\\Main.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport $ from 'jquery';\nimport { addMovies } from './action';\n\nconst mapStateToProps = state => ({\n  movieData: state.movies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addMovies: value => dispatch(addMovies(value))\n});\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      url: 'https://api.themoviedb.org/3/movie/now_playing?api_key=619797393cd52383263f43d35d25f59f&language=en-US&page=1&region=US'\n    };\n  }\n\n  componentDidMount() {\n    $.support.cors = true;\n    return $.ajax({\n      url: this.state.url,\n      method: \"GET\",\n      success: data => {\n        alert(\"Success\");\n        console.log(data);\n        addMovies(data);\n      },\n      error: data => {\n        alert(\"Error\");\n      }\n    });\n  }\n  /*newDiv(json) {\r\n      $.each(json.results, function (i, data) {\r\n          const movie = {\r\n              \"title\": data.title,\r\n              \"image\": data.backdrop_path\r\n          }\r\n          $(\"#tBody\").append(\r\n              '<div><h1>' + movie.title + '</h1>' +\r\n              '<tr><img src=\"https://image.tmdb.org/t/p/original' + data.backdrop_path + '\" alt=\"' + data.title + '\" style=\"width:22em;height:16em;\">');\r\n      });\r\n  } */\n\n\n  handleClick(event) {}\n\n  render() {\n    const movies = [];\n\n    if (this.state.movies) {\n      movies = /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, this.state.movies.map(data => {\n        return /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }\n        }, \"data\");\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"Testing\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, movies));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["D:/Desktop/Cloud_Files/School/Spring_2020/front_end_prototype/Site/src/Main/Main.js"],"names":["React","Component","connect","$","addMovies","mapStateToProps","state","movieData","movies","mapDispatchToProps","dispatch","value","Main","constructor","props","handleClick","bind","url","componentDidMount","support","cors","ajax","method","success","data","alert","console","log","error","event","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,SAAS,EAAED,KAAK,CAACE;AADa,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCN,EAAAA,SAAS,EAAGO,KAAD,IAAWD,QAAQ,CAACN,SAAS,CAACO,KAAD,CAAV;AADM,CAAL,CAAnC;;AAIA,MAAMC,IAAN,SAAmBX,SAAnB,CAA6B;AACzBY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AAEA,SAAKV,KAAL,GAAa;AACLW,MAAAA,GAAG,EAAE;AADA,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBf,IAAAA,CAAC,CAACgB,OAAF,CAAUC,IAAV,GAAiB,IAAjB;AAEA,WAAOjB,CAAC,CAACkB,IAAF,CAAO;AACVJ,MAAAA,GAAG,EAAE,KAAKX,KAAL,CAAWW,GADN;AAEVK,MAAAA,MAAM,EAAE,KAFE;AAGVC,MAAAA,OAAO,EAAGC,IAAD,IAAU;AACfC,QAAAA,KAAK,CAAC,SAAD,CAAL;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACApB,QAAAA,SAAS,CAACoB,IAAD,CAAT;AACH,OAPS;AAQVI,MAAAA,KAAK,EAAGJ,IAAD,IAAU;AACbC,QAAAA,KAAK,CAAC,OAAD,CAAL;AACH;AAVS,KAAP,CAAP;AAYH;AAED;;;;;;;;;;;;;AAYAV,EAAAA,WAAW,CAACc,KAAD,EAAQ,CAElB;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMtB,MAAM,GAAG,EAAf;;AACA,QAAG,KAAKF,KAAL,CAAWE,MAAd,EACA;AACIA,MAAAA,MAAM,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,KAAL,CAAWE,MAAX,CAAkBuB,GAAlB,CAAuBP,IAAD,IAAU;AAC7B,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,OAJA,CADL,CADJ;AAQH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKhB,MAAL,CAHJ,CADJ;AAOH;;AAhEwB;;AAkE7B,eAAeN,OAAO,CAACG,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CG,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport $ from 'jquery';\r\nimport { addMovies } from './action';\r\n\r\nconst mapStateToProps = state => ({\r\n    movieData: state.movies\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addMovies: (value) => dispatch(addMovies(value))\r\n})\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClick = this.handleClick.bind(this);\r\n\r\n        this.state = {\r\n                url: 'https://api.themoviedb.org/3/movie/now_playing?api_key=619797393cd52383263f43d35d25f59f&language=en-US&page=1&region=US',\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        $.support.cors = true;\r\n\r\n        return $.ajax({\r\n            url: this.state.url,\r\n            method: \"GET\",\r\n            success: (data) => {\r\n                alert(\"Success\");\r\n                console.log(data);\r\n                addMovies(data);\r\n            },\r\n            error: (data) => {\r\n                alert(\"Error\");\r\n            }\r\n        })\r\n    }\r\n\r\n    /*newDiv(json) {\r\n        $.each(json.results, function (i, data) {\r\n            const movie = {\r\n                \"title\": data.title,\r\n                \"image\": data.backdrop_path\r\n            }\r\n            $(\"#tBody\").append(\r\n                '<div><h1>' + movie.title + '</h1>' +\r\n                '<tr><img src=\"https://image.tmdb.org/t/p/original' + data.backdrop_path + '\" alt=\"' + data.title + '\" style=\"width:22em;height:16em;\">');\r\n        });\r\n    } */\r\n\r\n    handleClick(event) {\r\n\r\n    }\r\n\r\n    render() {\r\n        const movies = [];\r\n        if(this.state.movies)\r\n        {\r\n            movies = (\r\n                <ul>\r\n                    {this.state.movies.map((data) => {\r\n                        return (\r\n                            <h2>data</h2>\r\n                        )\r\n                    })}\r\n                </ul>)\r\n        }\r\n        return (\r\n            <div>\r\n                <h1>Testing</h1>\r\n\r\n                <ul>{movies}</ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);  "]},"metadata":{},"sourceType":"module"}